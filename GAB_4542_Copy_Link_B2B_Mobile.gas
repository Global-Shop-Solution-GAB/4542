Program.Sub.ScreenSU.Start
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start

Program.Sub.Preflight.End

Program.Sub.Main.Start
' hook 31981
' move DCC item master links for mobile bin to bin transfer

F.Intrinsic.Control.CallSub(Subbdfproc)




Program.Sub.Main.End

Program.Sub.subBDFProc.Start
F.Intrinsic.Control.SetErrorHandler("subBDFProc_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

V.Local.iC.Declare(Long)
V.Local.iC2.Declare(Long,1)
V.Local.iRowCount.Declare(Long)
V.Local.iColCount.Declare(Long)
V.Local.sPart.Declare(String)
V.Local.sRev.Declare(String)
V.Local.sFromLoc.Declare(String)
V.Local.sLot.Declare(String)
V.Local.sFromBIN.Declare(String)
V.Local.sHeat.Declare(String)
V.Local.sSerial.Declare(String)
V.Local.sToLoc.Declare(String)
V.Local.sToBIN.Declare(String)
V.Local.sSel.Declare(String)
V.Local.sInvQty.Declare(String)
V.Local.sInvTrf.Declare(String)
V.Local.sIDLink.Declare(String)
V.Local.iIDLink.Declare(Long)
V.Local.sIDLink2.Declare(String)
V.Local.iIDLink2.Declare(Long)
V.Local.sMessage.Declare(String)
V.Local.sSql.Declare(String)
V.Local.sSql2.Declare(String)
V.Local.sDccExists.Declare(String)
V.Local.iFileNumdcc.Declare(Long)
V.Local.sFiledcc.Declare(String)
V.Local.sTransID.Declare(String)
V.Local.sTransSfx.Declare(String)
V.Local.sQuery.Declare(String)
V.Local.sTransType.Declare(String)

F.odbc.Connection!conx.OpenConnection(V.Ambient.PDSN,V.Ambient.PUser,V.Ambient.PPass)


'F.Intrinsic.Debug.InvokeDebugger
'F.Intrinsic.Debug.Stop
V.Local.sTransID.Set(V.Passed.LINE-ID)
'V.Local.squery.Set("Select TOP 1 TRANS_ID from WIRELESS_HDR WHERE TRANS_TYPE = 'O90' AND ATTEMPTED_FLAG = 'Y' ORDER BY TRANS_ID DESC")
'	Function.ODBC.Connection!Conx.OpenRecordsetRO("WIR8",V.Local.squery)
'	F.Intrinsic.Control.If(V.ODBC.Conx!WIR8.EOF,=,False)
'	V.Local.stransid.Set(V.ODBC.Conx!WIR8.FieldVALTRIM!TRANS_ID)
'	F.ODBC.Conx!WIR8.Close
'	F.Intrinsic.Control.EndIf
V.Local.sTransSfx.Set("0000")


	F.Intrinsic.String.Concat("Select * from WIRELESS_LINE where TRANS_ID = '",V.Local.sTransID,"'",V.Local.sQuery)
	Function.ODBC.Connection!Conx.OpenRecordsetRO("rstWIR",V.Local.squery)
	V.Local.sTransType.Set(V.ODBC.Conx!rstWIR.FieldVal!Trans_Type)
	V.Local.sTransType.Set(V.ODBC.Conx!rstWIR.FieldVal!Trans_Type)
	V.Local.sPart.Set(V.ODBC.Conx!rstWIR.FieldVal!Field_1)
	V.Local.sFromLoc.Set(V.ODBC.Conx!rstWIR.FieldVal!Field_2)
	V.Local.sLot.Set(V.ODBC.Conx!rstWIR.FieldVal!Field_6)
	V.Local.sFromBin.Set(V.ODBC.Conx!rstWIR.FieldVal!Field_4)
	V.Local.sHeat.Set(V.ODBC.Conx!rstWIR.FieldVal!Field_7)
	V.Local.sSerial.Set(V.ODBC.Conx!rstWIR.FieldVal!Field_8)
	V.Local.sToLoc.Set(V.ODBC.Conx!rstWIR.FieldVal!Field_13)
	V.Local.sToBin.Set(V.ODBC.Conx!rstWIR.FieldVal!Field_5)
	F.Intrinsic.String.RPad(V.Local.sPart," ",20,V.Local.sPart)
	F.Intrinsic.String.RPad(V.Local.sFromLoc," ",2,V.Local.sFromLoc)
	F.Intrinsic.String.RPad(V.Local.sLot," ",15,V.Local.sLot)
	F.Intrinsic.String.RPad(V.Local.sFromBIN," ",6,V.Local.sFromBIN)
	F.Intrinsic.String.RPad(V.Local.sHeat," ",15,V.Local.sHeat)
	F.Intrinsic.String.RPad(V.Local.sSerial," ",30,V.Local.sSerial)
	F.Intrinsic.String.RPad(V.Local.sToLoc," ",2,V.Local.sToLoc)
	F.Intrinsic.String.RPad(V.Local.sToBIN," ",6,V.Local.sToBIN)
	F.Intrinsic.String.Concat(V.Local.sPart,V.Local.sFromLoc,V.Local.sLot,V.Local.sFromBIN,V.Local.sHeat,V.Local.sSerial,V.Local.sIDlink)

	F.ODBC.Conx!rstWIR.Close


		F.Global.DocumentControl.GetLinkID(V.Local.sIDLink,31,V.Local.iIDLink)
		F.Intrinsic.String.Concat("Select FILE_NUM, FILE from ATG_DOC_ASSOC Where LINK_ID='",V.Local.iIDLink,"'",V.Local.sSQL)
		F.ODBC.Connection!conx.OpenRecordsetRO("rstLFile",V.Local.sSQL)
		F.Intrinsic.Control.DoUntil(V.ODBC.conx!rstLFile.EOF,=,"True")
			V.Local.iFileNumdcc.Set(V.ODBC.conx!rstLFile.FieldVal!FILE_NUM)
			F.Intrinsic.String.Trim(V.ODBC.conx!rstLFile.FieldVal!FILE,V.Local.sFiledcc)
' Check and/or create Link ID for To Bin
			F.Intrinsic.String.Concat(V.Local.sPart,V.Local.sToLoc,V.Local.sLot,V.Local.sToBIN,V.Local.sHeat,V.Local.sSerial,V.Local.sIDlink2)
			F.Global.DocumentControl.GetLinkID(V.Local.sIDLink2,31,V.Local.iIDLink)
			F.Intrinsic.Control.If(V.Local.iIDLink2,<,1)
				F.Global.DocumentControl.CreateReference(V.Local.sIDLink2,31,V.Local.iIDLink2)
			F.Intrinsic.Control.Endif
' Get DocumentID, checks if the file exists in the To Bin
			F.Global.DocumentControl.GetDocumentID(V.Local.iIDLink2,V.Local.sFiledcc,V.Local.sDccExists)
			F.Intrinsic.Control.If(V.Local.sDccExists,=,"")
'Add DCC to To Part/Bin using SQL
				V.Local.sSql2.Set("INSERT INTO ATG_DOC_ASSOC (LINK_ID, FILE_TYPE, PATH, FILE, DESCRIPTION, DATE_ADDED, GS_USER, GRP_ID, INFO_1, INFO_2, STATUS, REV, INV_NON_REV)")
				F.Intrinsic.String.Concat(V.Local.sSql2," SELECT '",V.Local.iIDLink2,"' , FILE_TYPE, PATH, FILE, DESCRIPTION, DATE_ADDED, GS_USER, GRP_ID, INFO_1, INFO_2, STATUS, REV, INV_NON_REV",V.Local.sSql2)
				F.Intrinsic.String.Concat(V.Local.sSql2," FROM ATG_DOC_ASSOC WHERE FILE_NUM='",V.Local.iFileNumdcc,"'",V.Local.sSql2)
				F.ODBC.Connection!conx.Execute(V.Local.sSql2)
			F.Intrinsic.Control.endif
'Delete Previous DCC if its transfers all units
			F.Intrinsic.String.Concat("Select QUANTITY from ITEM_MASTER WHERE PART = '",V.Local.sPart,"'"," and location = '",V.Local.sFromLoc,"'"," and lot = '",V.Local.sLot,"'"," and bin = '",V.Local.sFromBIN,"'"," and heat = '",V.Local.sHeat,"'"," and serial_number = '",V.Local.sSerial,"'",V.Local.sQuery)
				Function.ODBC.Connection!Conx.OpenRecordsetRO("WIR2",V.Local.squery)
				F.Intrinsic.Control.If(V.ODBC.Conx!WIR2.EOF,=,False)
				V.Local.sInvQty.Set(V.ODBC.Conx!WIR2.FieldVal!QUANTITY)
					F.Intrinsic.Control.If(V.Local.sInvQty,=,0)
							F.Global.DocumentControl.DeleteDocument(V.Local.iFileNumdcc)
					F.Intrinsic.Control.EndIf
				
				F.Intrinsic.Control.ElseIf(V.ODBC.Conx!WIR2.EOF,=,True)
					F.Global.DocumentControl.DeleteDocument(V.Local.iFileNumdcc)

				F.ODBC.Conx!WIR2.Close
				F.Intrinsic.Control.EndIf

		
'
		F.ODBC.conx!rstLFile.MoveNext
		F.Intrinsic.Control.Loop
		F.ODBC.conx!rstLFile.Close



F.ODBC.Connection!conx.Close

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("subBDFProc_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GAB_INV_TRF_LKCP.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.Debug.SetLA(V.Local.sError)
Function.Intrinsic.Control.EndIf

Program.Sub.subBDFProc.End

Program.Sub.Comments.Start
${$0$}$GAB_INV_TRF_LKCP$}$RRODRIGUEZ$}$6/14/13
${$1$}$$}$$}$0$}$28072$}$IMS054-POST-OK-HOOK$}$6/14/13 2:00:25 PM$}$(Program: LOT054GI?; Screen: IMS054)

${$3$}$0$}$$}$0$}$-1$}$$}$12:00:00 AM$}$Inventory Transfers, copies DCC from source Part LBH to the target Part LBH, if the user transfer all units then deletes the DCC from source LBH.
Program.Sub.Comments.End

